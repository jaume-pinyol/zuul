apply plugin: 'groovy'
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'java' //so that there are some configurations

configurations.all {
    resolutionStrategy {
        // fail eagerly on version conflict (includes transitive dependencies)
        // e.g. multiple different versions of the same dependency (group and name are equal)
        //failOnVersionConflict()

        // force certain versions of dependencies (including transitive)
        //  *append new forced modules:
        force 'asm:asm-all:3.3.1', 'com.google.guava:guava:14.0.1', 'com.netflix.governator:governator:1.3.3'
        //  *replace existing forced modules with new ones:

        // cache dynamic versions for 10 minutes
        cacheDynamicVersionsFor 10*60, 'seconds'
        // don't cache changing modules at all
        cacheChangingModulesFor 0, 'seconds'
    }
}

dependencies {

    compile project(':zuul-core')
    compile project(':zuul-netflix')

    compile 'com.netflix.karyon:karyon-core:2.0.02'
    compile 'com.netflix.karyon:karyon-admin:2.0.02'
    compile 'com.netflix.karyon:karyon-admin-web:2.0.02'
    compile 'com.netflix.karyon:karyon-extensions:2.0.02'
    compile 'com.netflix.blitz4j:blitz4j:1.35'
    compile 'com.sun.jersey:jersey-core:1.19'
    compile 'com.sun.jersey:jersey-server:1.19'
    compile 'com.sun.jersey:jersey-client:1.19'
    compile 'com.sun.jersey:jersey-servlet:1.19'
    compile 'com.netflix.hystrix:hystrix-metrics-event-stream:1.4.11'


    compile "org.codehaus.groovy:groovy-all:2.3.6"
    providedCompile 'junit:junit-dep:4.10'

    runtime 'org.ow2.asm:asm:5.0.3'
    runtime 'org.ow2.asm:asm-all:5.0.3'
    runtime 'org.apache.xbean:xbean-bundleutils:3.17'
    runtime 'org.apache.xbean:xbean-finder:3.17'
}

javadoc {
    options {
        doclet = "org.benjchristensen.doclet.DocletExclude"
        docletpath = [rootProject.file('./gradle/doclet-exclude.jar')]
        stylesheetFile = rootProject.file('./gradle/javadocStyleSheet.css')
        windowTitle = "Zuul Javadoc ${project.version}"
    }
}

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = true
    }
}

war {
    webXml = file('src/main/webapp/WEB-INF/web.xml')
    webInf{
        from('src/main/groovy/filters') {
            into('classes')
        }
    }
}

jettyRun.contextPath = '/'

jettyRun.doFirst {
    System.setProperty("archaius.deployment.applicationId", "zuul")
}
